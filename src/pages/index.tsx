import Head from "next/head";
import { SignInButton, SignOutButton, useUser } from "@clerk/nextjs";
import { RouterOutputs, api } from "~/utils/api";

const CreatePostWizard = () => {
  const { user } = useUser();
  if (!user) return null;

  return (
    <div className="flex w-full gap-3">
      <img
        src={user.profileImageUrl}
        alt="Profile image"
        className="h-16 w-16 rounded-full"
      />
      <input
        placeholder="Type some emojis!"
        className="grow bg-transparent outline-none"
      />
    </div>
  );
};

type PostWithUser = RouterOutputs["posts"]["getAll"][number];
const PostsView = (props: PostWithUser) => {
  const { post, author } = props;
  return (
    <div key={post.id} className="border-b border-slate-400 p-8 ">
      <img src={author?.profilePicture} alt="profile picture" className="h-4 w-4 rounded-full" />
      {post?.content}
    </div>
  );
};

export default function Home() {
  const user = useUser();

  console.log(user.user?.id);
  const { data, isLoading } = api.posts.getAll.useQuery();

  // if(!data || isLoading) return <div>Loading...</div>
  if (isLoading) return <div>Loading...</div>;

  if (!data) return <div>Something went wrong</div>;

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex h-screen justify-center">
        <div className="h-full w-full border-x border-slate-400 md:max-w-2xl">
          <div>
            {!user.isSignedIn ? (
              <div className="flex justify-center">
                <SignInButton />
              </div>
            ) : (
              <div className="flex justify-center">
                <CreatePostWizard />
                <SignOutButton />
              </div>
            )}
          </div>
          <div className="flex flex-col">
            {/* {[...data!, ...data!]?.map(({ post, author }) => ( */}
            {/* {data?.map(({post, author}) => ( */}
            {data?.map((fullPost) => (
              <PostsView {...fullPost} key={fullPost.post.id} />
            ))}
          </div>
        </div>
      </main>
    </>
  );
}
